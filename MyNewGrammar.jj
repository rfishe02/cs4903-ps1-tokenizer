/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options{  static = false;}PARSER_BEGIN(Tokenizer)
import java.io.IOException;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.File;

public class Tokenizer{  public static void main(String args[]) throws ParseException  {

    args = new String[1];
    args[0] = "./input/Andrew L. Mackey.html";

    //Andrew L. Mackey.html
    // test.txt

	test(args);
	//run(args);
      }

  public static void test(String[] args) {

	try {

		Tokenizer parser = new Tokenizer(new BufferedReader(new FileReader(args[0])));
		Token t;

		do {

			t = parser.getNextToken();
			System.out.printf("%20s %20s\n",t.image,Tokenizer.tokenImage[t.kind]);

		} while(t.kind != TokenizerConstants.EOF);

	} catch(IOException ex) {
		System.exit(1);
	}

  }

  public static void run(String[] args) {

	String[] spl;
	String filename;

	try {

		File inDir = new File(args[0]);
	  	File[] files = inDir.listFiles();

	  	for(File f : files) {

            BufferedWriter bw = new BufferedWriter(new FileWriter(f.getName()+".out"));
			Tokenizer parser = new Tokenizer(new BufferedReader(new FileReader(f.getPath())));
			Token t;

			do {

				t = parser.getNextToken();
				bw.write(String.format("%20s %20s\n",t.image,Tokenizer.tokenImage[t.kind]));
				//bw.write(t.image.toLowerCase()+"\n");

			} while(t.kind != TokenizerConstants.EOF);

			bw.close();            

	  	}

	} catch(IOException ex) {
		System.exit(1);
	}

  }
  }PARSER_END(Tokenizer)

// < HTTP : ( (["a"-"z"])+("://"|"."|"/")? )+  >
// < NAPHONE : ( (["0"-"9"]){3}("-"|".") ){1,2}(["0"-"9"]){4} > // Need to add more stuffSKIP :{  < SPACE : (" "|"\t"|"&nbsp;")+ >| < NEWLINE : ("\r"|"\n") >
| < MULTPERIOD : ["."](".")+ >
| < MULTEXCLAIM : ["!"]("!")+ >}
TOKEN :
{
	< PHONE34 :
    ( ( ("+")?(["0"-"9"]){1,2}["-"," ","."] )? (["0"-"9"]){1,4}["-"," ","."] )?
    (["0"-"9"]){3,4}["-"," ","."](["0"-"9"]){4} // Need to account for parens
    >
}

TOKEN :
{
    < OPENTAG : ["<"] (" ")* (["a"-"z","0"-"9"])+ (" ")* ([">"])? >
|   < HTMLATTR : (["a"-"z"])+ (" ")?(":"|"=")(" ")? (["a"-"z","0"-"9"])? (" ")* (";"|"\"")  >
|   < CLOSETAG : "<" (" ")* "/" (" ")* (["a"-"z","0"-"9"])+ (" ")* ">" >
|   < HTTP : (["a"-"z"])+("://")+ >
| 	< HTTPDOM : ( (["a"-"z"])+(".") )+ (["a"-"z"])+ >
| 	< PORT : ":"(["0"-"9"]){4} >
| 	< HTTPJNK : "/" (["a"-"z","A"-"Z","0"-"9",".","&","-","?","_","=",";",":","%"])+ >
|   < EMAIL : ( (["a"-"z","0"-"9","_",".","+","-"])+("@"|".") )+ (["a"-"z"])+ > // Can't start or end with certain things?
//|   < IP : (  (["1"-"2"]){0,1}(["1"-"5"]){2} "."  )+ > // Need to fix this
}

TOKEN :
{
    < CONTWORD : (["a"-"z","A"-"Z"])+"'"(["a"-"z","A"-"Z"]){1,2} >
| 	< BREV : ["a"-"z","A"-"Z"]"." > // Need to fix
| 	< WORD : (["a"-"z","A"-"Z"])+ >
| 	< PRICE : ["$","£","¥"]( (["0"-"9"]){1,3}(",")? )+ ("."(["0"-"9"])+)? > // Need to look at international options
| 	< BIGNUMB : ( (["0"-"9"]){1,3}"," )+ (["0"-"9"]){1,3} ("."(["0"-"9"])+)? >
| 	< NUMBER : (["0"-"9"])+ ("."(["0"-"9"])+)? >
| 	< MISC : ~[] >
}
